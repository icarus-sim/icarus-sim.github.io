{"name":"Icarus","tagline":"Caching Simulator for Information Centric Networking (ICN)","body":"Icarus is a Python-based simulator for evaluating caching performance in Information Centric Networking (ICN).\r\n\r\nIcarus has been designed to be easy to use and very extensible.\r\n\r\n### Download\r\nYou can download a stable release in a zip or tar.gz format using the links below.\r\n\r\n**Latest version:**\r\n\r\n * Version 0.2.1: [\\[zip\\]](https://github.com/icarus-sim/icarus/archive/v0.2.1.zip) [\\[tar.gz\\]](https://github.com/icarus-sim/icarus/archive/v0.2.1.tar.gz)\r\n\r\n**Older versions:**\r\n\r\n * Version 0.2: [\\[zip\\]](https://github.com/icarus-sim/icarus/archive/v0.2.zip) [\\[tar.gz\\]](https://github.com/icarus-sim/icarus/archive/v0.2.tar.gz)\r\n * Version 0.1.1: [\\[zip\\]](https://github.com/icarus-sim/icarus/archive/v0.1.1.zip) [\\[tar.gz\\]](https://github.com/icarus-sim/icarus/archive/v0.1.1.tar.gz)\r\n * Version 0.1.0: [\\[zip\\]](https://github.com/icarus-sim/icarus/archive/v0.1.zip) [\\[tar.gz\\]](https://github.com/icarus-sim/icarus/archive/v0.1.tar.gz)\r\n\r\nYou can also get the development branch from the Github repository using Git. Just open a shell, `cd` to the directory where you want to download the simulator and type:\r\n\r\n    $ git clone https://github.com/icarus-sim/icarus.git\r\n\r\n### Configuration\r\nBefore using the simulator, you need to install all required dependencies.\r\n\r\nIf you use Ubuntu (version 13.10+) you can run the script `ubuntusetup.sh`\r\nlocated in the `scripts` folder which will take of installing all the\r\ndependencies. To run it, executes the following commands\r\n\r\n    $ cd <YOUR ICARUS FOLDER>\r\n    $ cd scripts\r\n    $ sh ubuntusetup.sh\r\n\r\nThe script, after being launched, will ask you for superuser password.\r\n\r\nOtherwise, have a look at the `README.md` file, which explains how to configure your machine and install all required dependencies.\r\n\r\n\r\n### Usage\r\n\r\n#### Run simulations\r\nTo use Icarus with the currently implemented topologies and models of caching policies\r\nand strategies you need to do the following.\r\n\r\nFirst, Create a configuration file with all the desired parameters of your simulation. You can modify the file `config.py`, which is a well documented example configuration. You can even use the configuration file as it is just to get started.\r\n\r\nSecond, run Icarus by running the script `icarus.py` using the following syntax\r\n\r\n    $ python icarus.py --results RESULTS_FILE [--plots PLOTS_DIR] CONF_FILE\r\n\r\nwhere:\r\n\r\n * `RESULTS_FILE` is the [pickle](http://docs.python.org/3/library/pickle.html) file in which results will be saved,\r\n * `PLOT_DIR` is the directory where graphs plotting the results will be saved. If the folder does not exist, it will be created. This parameter is optional. If omitted, graphs will not be plotted. Results can be plotted at a later stage anyway.\r\n * `CONF_FILE` is the configuration file\r\n\r\nExample usage could be:\r\n\r\n    $ python icarus.py --output results.pickle --plots graphs config.py\r\n\r\nBy executing the steps illustrated above it is possible to run simulation using the\r\ntopologies, cache policies, strategies and result collectors readily available on\r\nIcarus. Icarus makes it easy to implement new models to use in simulations.\r\n\r\nTo implement new models, please refer to the description of the simulator \r\nprovided in this paper:\r\n\r\nL.Saino, I. Psaras and G. Pavlou, Icarus: a Caching Simulator for Information Centric\r\nNetworking (ICN), in Proc. of SIMUTOOLS'14, Lisbon, Portugal, March 2014.\r\n[\\[PDF\\]](http://www.ee.ucl.ac.uk/~lsaino/publications/icarus-simutools14.pdf),\r\n[\\[BibTex\\]](http://www.ee.ucl.ac.uk/~lsaino/publications/icarus-simutools14.bib)\r\n\r\nOtherwise, please browse the source code. It is very well documented and easy to\r\nunderstand.\r\n\r\n#### Modelling tools\r\nIn addition. Icarus provides utilities for modelling the performance of caches and\r\nwork with traffic traces. The code is included in the [`icarus.tools`](http://icarus-sim.github.io/doc/apidoc/icarus.tools.html) package.\r\nThese tools are described in detail in [this paper](http://www.ee.ucl.ac.uk/~lsaino/publications/icarus-simutools14.pdf).\r\n\r\n### Documentation\r\nIf you desire further information about Icarus, you can find it in the following places:\r\n\r\n * In [this paper](http://www.ee.ucl.ac.uk/~lsaino/publications/icarus-simutools14.pdf), which describes the overall architecture of the Icarus simulator,\r\n   the motivations for its design, the models implemented and shows some snippets of codes on how to use the modelling tools.\r\n * In the [API reference](http://icarus-sim.github.io/doc/), which documents all packages, modules, classes, methods\r\n   and functions included in the Icarus simulator.\r\n * In the [source code](https://www.github.com/icarus-sim/icarus), which is well organized and throughly documented.\r\n\r\n### Citing\r\n\r\nIf you use Icarus for your paper, please refer to the following publication:\r\n\r\n    @inproceedings{icarus-simutools14,\r\n       author = {Saino, Lorenzo and Psaras, Ioannis and Pavlou, George},\r\n       title = {Icarus: a Caching Simulator for Information Centric Networking (ICN)},\r\n       booktitle = {Proceedings of the 7th International ICST Conference on Simulation Tools and Techniques},\r\n       series = {SIMUTOOLS '14},\r\n       year = {2014},\r\n       location = {Lisbon, Portugal},\r\n       numpages = {10},\r\n       publisher = {ICST},\r\n       address = {ICST, Brussels, Belgium, Belgium},\r\n    }\r\n\r\n### Reproduce hash-routing results\r\nThis repository contains the code and configuration to reproduce the results and plot the graphs presented\r\nin the paper:\r\n\r\nL.Saino, I. Psaras and G. Pavlou, Hash-routing Schemes for Information Centric Networking,\r\nin *Proc. of the 3rd ACM SIGCOMM workshop on Information Centric Networking (ICN'13)*, Hong Kong, China, August 2013.\r\n[\\[PDF\\]](http://www.ee.ucl.ac.uk/~lsaino/publications/hashrouting-icn13.pdf),\r\n[\\[BibTex\\]](http://www.ee.ucl.ac.uk/~lsaino/publications/hashrouting-icn13.bib)\r\n\r\nTo reproduce results and plot the graph, simply go to the folder `./reproduce-results/hashrouting-icn13` and run the script `reproduce_results.sh`. \r\n\r\n    $ cd <YOUR ICARUS FOLDER>\r\n    $ cd reproduce-results/hashrouting-icn13\r\n    $ sh reproduce_results.sh\r\n\r\nThis script has been tested only on Ubuntu 12.04, but should work fine on any more recent versions.\r\n\r\nThis script will run all simulations automatically, save all log files and plot all graphs.\r\n\r\nThe logs will be saved in the `logs` directory, while the graphs will be saved in the `graphs` directory.Icarus is a Python-based simulator for evaluating the performance of caches in Information Centric Networking (ICN).\r\n\r\nIcarus has been designed to be easy to use and very extensible.\r\n\r\n### Download\r\nYou can download a stable release in a zip or tar.gz format using the links below.\r\n\r\n**Latest version:**\r\n * Version 0.2: [\\[zip\\]](https://github.com/lorenzosaino/icarus/archive/v0.2.zip) [\\[tar.gz\\]](https://github.com/lorenzosaino/icarus/archive/v0.2.tar.gz)\r\n\r\n**Older versions:**\r\n * Version 0.1.1: [\\[zip\\]](https://github.com/lorenzosaino/icarus/archive/v0.1.1.zip) [\\[tar.gz\\]](https://github.com/lorenzosaino/icarus/archive/v0.1.1.tar.gz)\r\n * Version 0.1.0: [\\[zip\\]](https://github.com/lorenzosaino/icarus/archive/v0.1.zip) [\\[tar.gz\\]](https://github.com/lorenzosaino/icarus/archive/v0.1.tar.gz)\r\n\r\nYou can also get the development branch from the Github repository using Git. Just open a shell, `cd` to the directory where you want to download the simulator and type:\r\n\r\n`git clone https://github.com/lorenzosaino/icarus.git`\r\n\r\n### Configuration\r\nBefore using the simulator, you need to install all required dependencies.\r\nIf you use Ubuntu (version 13.10+) you can run the script `ubuntusetup.sh` located in the `scripts` folder which will take care of installing all the required dependencies.\r\n\r\nOtherwise, have a look at the `README.md` file, which explains how to configure your machine and install all required dependencies.\r\n\r\n\r\n### Usage\r\n\r\n#### Run simulations\r\nTo use Icarus with the currently implemented topologies and models of caching policies\r\nand strategies you need to do the following.\r\n\r\n1. Create a configuration file with all the desired parameters of your simulation\r\n   You can modify the file `config.py`, which is a well documented example configuration.\r\n   You can even use the configuration file as it is just to get started.\r\n2. Run Icarus by running the script `icarus.py` using the following syntax\r\n\r\n    `python icarus.py --results RESULTS_FILE [--plots PLOTS_DIR] CONF_FILE` \r\n   where:\r\n    * `RESULTS_FILE` is the [pickle](http://docs.python.org/3/library/pickle.html) file in which results will be saved,\r\n    * `PLOT_DIR` is the directory where graphs plotting the results will be saved. If the folder does not exist, it will be created.\r\n      This parameter is optional. If omitted, graphs will not be plotted. Results can be plotted at a later stage anyway.\r\n    * `CONF_FILE` is the configuration file\r\n\r\nExample usage could be:\r\n\r\n`python icarus.py --output results.pickle --plots graphs config.py`\r\n\r\nBy executing the steps illustrated above it is possible to run simulation using the\r\ntopologies, cache policies, strategies and result collectors readily available on\r\nIcarus. Icarus makes it easy to implement new models to use in simulations.\r\n\r\nTo implement new models, please refer to the description of the simulator \r\nprovided in this paper:\r\n\r\nL.Saino, I. Psaras and G. Pavlou, Icarus: a Caching Simulator for Information Centric\r\nNetworking (ICN), in Proc. of SIMUTOOLS'14, Lisbon, Portugal, March 2014.\r\n[\\[PDF\\]](http://www.ee.ucl.ac.uk/~lsaino/publications/icarus-simutools14.pdf),\r\n[\\[BibTex\\]](http://www.ee.ucl.ac.uk/~lsaino/publications/icarus-simutools14.bib)\r\n\r\nOtherwise, please browse the source code. It is very well documented and easy to\r\nunderstand.\r\n\r\n#### Modelling tools\r\nIn addition. Icarus provides utilities for modelling the performance of caches and\r\nwork with traffic traces. The code is included in the `icarus.tools` package.\r\nThese tools are described in detail in [this paper](http://www.ee.ucl.ac.uk/~lsaino/publications/icarus-simutools14.pdf).\r\n\r\n### Citing\r\n\r\nIf you use Icarus for your paper, please refer to the following publication:\r\n\r\n```\r\n@inproceedings{icarus-simutools14,\r\n     author = {Saino, Lorenzo and Psaras, Ioannis and Pavlou, George},\r\n     title = {Icarus: a Caching Simulator for Information Centric Networking (ICN)},\r\n     booktitle = {Proceedings of the 7th International ICST Conference on Simulation Tools and Techniques},\r\n     series = {SIMUTOOLS '14},\r\n     year = {2014},\r\n     location = {Lisbon, Portugal},\r\n     numpages = {10},\r\n     publisher = {ICST},\r\n     address = {ICST, Brussels, Belgium, Belgium},\r\n}\r\n```\r\n\r\n### Reproduce hash-routing results\r\nThis repository contains the code and configuration to reproduce the results and plot the graphs presented\r\nin the paper:\r\n\r\nL.Saino, I. Psaras and G. Pavlou, Hash-routing Schemes for Information Centric Networking,\r\nin *Proc. of the 3rd ACM SIGCOMM workshop on Information Centric Networking (ICN'13)*, Hong Kong, China, August 2013.\r\n[\\[PDF\\]](http://www.ee.ucl.ac.uk/~lsaino/publications/hashrouting-icn13.pdf),\r\n[\\[BibTex\\]](http://www.ee.ucl.ac.uk/~lsaino/publications/hashrouting-icn13.bib)\r\n\r\nTo reproduce results and plot the graph, simply go to the folder `./reproduce-results/hashrouting-icn13` and run the script `reproduce_results.sh`. This script has been tested only on Ubuntu 12.04, but should work fine on any more recent versions.\r\n\r\nThis script will run all simulations automatically, save all log files and plot all graphs.\r\n\r\nThe logs will be saved in the `logs` directory, while the graphs will be saved in the `graphs` directory.\r\n\r\n### License\r\nIcarus is licensed under the terms of the [GNU GPLv2 license](http://www.gnu.org/licenses/gpl-2.0.html).\r\n\r\n### Contacts\r\nFor further information about the Icarus simulator, please contact\r\n[Lorenzo Saino](http://www.ee.ucl.ac.uk/~lsaino)\r\n\r\n### Acknowledgments\r\nThis work is funded by the EU-Japan initiative under European Commission FP7 grant agreement no. 608518 and NICT contract no. 167 ([the GreenICN project](http://www.greenicn.org/)).","google":"UA-47312495-1","note":"Don't delete this file! It's used internally to help with page regeneration."}